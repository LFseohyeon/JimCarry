<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.jimcarry.mapper.ReviewMapper">
    <!--리뷰 추가-->
    <insert id="insert">
        insert into jimcarry.tbl_review
        (user_id, storage_id, review_title, review_context)
        values(#{userId}, #{storageId}, #{reviewTitle}, #{reviewContext})
    </insert>

    <!--리뷰 목록 전체 조회-->
    <select id="selectAll" resultType="reviewDTO">
        select review_id, u.user_id, storage_id, review_title, review_context, review_write_date, review_edit_date,
        user_identification, user_password, user_email, user_phone, user_address, user_address_detail, user_gender, user_birth, user_name
        from tbl_user u join tbl_review r on u.user_id = r.user_id
    </select>

    <!--리뷰 목록 개수-->
    <select id="total" resultType="int">
        select count(review_id) from tbl_review
    </select>

    <!-- 리뷰 조건조회 -->
    <select id="selectAllBy" resultType="reviewDTO">
        select review_id, u.user_id, storage_id, review_title, review_context, review_write_date, review_edit_date,
        user_identification, user_password, user_email, user_phone, user_address, user_address_detail, user_gender, user_birth, user_name
        from tbl_user u join tbl_review r on u.user_id = r.user_id
        order by review_id
        <if test="page.searchDTO.isDesc">
            desc
        </if>
        <include refid="searchType"/>
    </select>

    <!--리뷰 조건조회 개수-->
    <select id="totalBy" resultType="int">
        select count(review_id) from tbl_review
        <include refid="searchType"/>
    </select>

    <!-- 리뷰 수정 -->
    <update id="update">
        update jimcarry.tbl_review
        set review_title=#{reviewTitle}, review_context=#{reviewContext}, review_edit_date=CURRENT_TIMESTAMP
        where review_id=#{reviewId};
    </update>

    <!--  PageDTO인지 SearchDTO인지 판별  -->
    <sql id="searchType">
        <choose>
            <when test="page.IS_SEARCH_DTO">
                <bind name="dto" value="page"/>
            </when>
            <otherwise>
                <bind name="dto" value="page.searchDTO"/>
            </otherwise>
        </choose>
        <include refid="searchContext"/>
    </sql>
    <!--  조건에 맞는 테이블 검색조건  -->
    <sql id="searchContext">
        where
        <trim prefixOverrides="and">
            <foreach collection="dto.types" item="type">
                <trim prefix="and">
                    <choose>
                        <when test="type == 'userId'.toString()">
                            user_id = #{dto.userId}
                        </when>
                        <when test="type == 'keyword'.toString()">
                            storage_title like concat('%', #{dto.keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>
</mapper>