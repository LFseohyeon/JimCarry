<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.jimcarry.mapper.InquiryMapper">
    <insert id="insert" useGeneratedKeys="true" keyProperty="inquiryId">
        insert into tbl_inquiry (user_id, inquiry_title, inquiry_content, inquiry_regist)
        values (#{userId}, #{inquiryTitle}, #{inquiryContent}, current_timestamp())
    </insert>
    <select id="select" resultType="inquiryVO">
        select inquiry_id, user_id, inquiry_title, inquiry_content, inquiry_regist, inquiry_answer from tbl_inquiry
        where inquiry_id = ${inquiryId}
    </select>

    <!-- 검색조건에 맞는 테이블 불러옴(페이징처리) -->
    <select id="selectBy" resultType="inquiryVO">
        select inquiry_id, user_id, inquiry_title, inquiry_content, inquiry_regist, inquiry_answer from tbl_inquiry
        <include refid="searchType"/>
        order by inquiry_id
        <if test="page.searchDTO.isDesc">
            desc
        </if>
        limit #{page.criteria.startRow}, #{page.criteria.amount}
    </select>

    <!-- 검색조건에 맞는 총 갯수 -->
    <select id="totalBy" resultType="int">
        select count(inquiry_id) from join tbl_inquiry
        <include refid="searchType"/>
    </select>
    <select id="totalByCount" resultType="int">
        select count(inquiry_id) from tbl_user u join tbl_inquiry i on u.user_id = i.user_id
        <include refid="searchType"/>
    </select>

    <!-- 문의 총 수-->
    <select id="total" resultType="int">
        select count(inquiry_id) from tbl_inquiry
    </select>

    <!-- 문의사항 업데이트 -->
    <update id="update">
        update jimcarry.tbl_inquiry
        set inquiry_title=#{inquiryTitle}, inquiry_content=#{inquiryContent}, inquiry_answer=#{inquiryAnswer}
        where inquiry_id=#{inquiryId}
    </update>

    <!--  PageDTO인지 SearchDTO인지 판별  -->
    <sql id="searchType">
        <choose>
            <when test="page.IS_SEARCH_DTO">
                <bind name="dto" value="page"/>
            </when>
            <otherwise>
                <bind name="dto" value="page.searchDTO"/>
            </otherwise>
        </choose>
        <if test="dto.types != null">
            <include refid="searchContext"/>
        </if>
    </sql>
    <!--  조건에 맞는 테이블 검색조건  -->
    <sql id="searchContext">
        where
        <trim prefixOverrides="and">
            <foreach collection="dto.types" item="type">
                <trim prefix="and">
                    <choose>
                        <when test="type == 'userId'.toString()">
                            user_id = #{dto.userId}
                        </when>
                        <when test="type == 'keyword'.toString()">
                            enquiry_title like concat('%', #{dto.keyword}, '%')
                        </when>
                        <when test="type == 'userAddress'.toString()">
                            user_address like concat('%', #{dto.userAddress}, '%')
                        </when>
                        <when test="type == 'userName'.toString()">
                            user_name like concat('%', #{dto.userName}, '%')
                        </when>
                        <when test="type == 'userIdentification'.toString()">
                            user_identification like concat('%', #{dto.userIdentification}, '%')
                        </when>
                        <when test="type == 'inquiryTitle'.toString()">
                            inquiry_title like concat('%', #{dto.inquiryTitle}, '%')
                        </when>
                        <when test="type == 'inquiryContent'.toString()">
                            inquiry_content like concat('%', #{dto.inquiryContent}, '%')
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>
    <!--전체 조회-->
    <select id="selectAll" resultType="inquiryDTO">
        select u.user_id , user_identification, user_password, user_email, user_phone, user_address,
        user_address_detail, user_gender, user_birth, inquiry_id, inquiry_title, user_name
        inquiry_content, inquiry_regist, inquiry_answer
        from tbl_user u join tbl_inquiry i on u.user_id = i.user_id
        order by user_id
        <if test="page.searchDTO.isDesc">
            desc
        </if>
        limit #{page.criteria.startRow}, #{page.criteria.amount}
    </select>
    <!--조건 전체 조회-->
    <select id="selectAllBy" resultType="inquiryDTO">
        select inquiry_id, i.user_id, inquiry_title, inquiry_content, inquiry_regist, inquiry_answer,
        user_identification, user_password, user_name, user_email, user_phone, user_address, user_address_detail,
        user_gender, user_birth, user_random_key, user_status
        from tbl_user u join tbl_inquiry i on u.user_id = i.user_id
        <include refid="searchType"/>
        order by user_id
        <if test="page.searchDTO.isDesc">
            desc
        </if>
        limit #{page.criteria.startRow}, #{page.criteria.amount}
    </select>
    <select id="selectInquiryId" resultType="inquiryDTO">
        select inquiry_id, u.user_id, inquiry_title, inquiry_content, inquiry_regist, inquiry_answer,
        user_identification, user_password, user_name, user_email, user_phone, user_address, user_address_detail,
        user_gender, user_birth, user_random_key, user_status
        from tbl_user u join tbl_inquiry i on u.user_id = i.user_id
        where inquiry_id = #{inquiryId}
        order by inquiry_id
    </select>
    <!-- 삭제 -->
    <delete id="delete">
        delete from tbl_inquiry
        where inquiry_id = #{inquiryId}
    </delete>

    <!-- 답변 완료 총 개수-->
    <select id="totalAnswerTrue" resultType="int">
        select count(inquiry_answer) from tbl_inquiry where inquiry_answer = 1
    </select>
    <!-- 답변 대기 총 개수-->
    <select id="totalAnswerFalse" resultType="int">
        select count(inquiry_answer) from tbl_inquiry where inquiry_answer = 0
    </select>
</mapper>